{"ast":null,"code":"var _jsxFileName = \"D:\\\\react_training\\\\ReactJsOld\\\\src\\\\views\\\\components\\\\SimpleFormik.js\";\nimport { Formik, Field, ErrorMessage } from 'formik';\nimport React from 'react';\n\nvar SimpleFormik = function SimpleFormik(_ref) {\n  var addCard = _ref.addCard;\n  var initialValues = {\n    title: '',\n    text: ''\n  };\n\n  var validateForm = function validateForm(values) {\n    var errors = {};\n\n    if (!values.title) {\n      errors.title = 'Title is required';\n    }\n\n    if (!values.text) {\n      errors.text = 'Description is required';\n    }\n\n    return errors;\n  };\n\n  var handleSubmit = function handleSubmit(values, _ref2) {\n    var setSubmitting = _ref2.setSubmitting,\n        resetForm = _ref2.resetForm;\n    var errors = validateForm(values);\n\n    if (Object.keys(errors).length > 0) {\n      // Set the form submission as not complete and let Formik handle the error display\n      setSubmitting(false);\n    } else {\n      // Proceed with the submission\n      addCard(values);\n      resetForm();\n    }\n  };\n\n  return React.createElement(Formik, {\n    initialValues: initialValues,\n    validate: validateForm,\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, function (_ref3) {\n    var isSubmitting = _ref3.isSubmitting;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, \"Simple Formik\"), React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, \"Title:\", React.createElement(Field, {\n      type: \"text\",\n      name: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }), React.createElement(ErrorMessage, {\n      name: \"title\",\n      component: \"div\",\n      className: \"error\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, \"Description:\", React.createElement(Field, {\n      type: \"text\",\n      name: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }), React.createElement(ErrorMessage, {\n      name: \"text\",\n      component: \"div\",\n      className: \"error\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"submit\",\n      disabled: isSubmitting,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, isSubmitting ? 'Submitting...' : 'Submit')), React.createElement(\"style\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"\\n            .error {\\n              color: red;\\n            }\\n          \"));\n  });\n};\n\nexport default SimpleFormik;","map":{"version":3,"sources":["D:\\react_training\\ReactJsOld\\src\\views\\components\\SimpleFormik.js"],"names":["Formik","Field","ErrorMessage","React","SimpleFormik","addCard","initialValues","title","text","validateForm","values","errors","handleSubmit","setSubmitting","resetForm","Object","keys","length","isSubmitting"],"mappings":";AAAA,SAASA,MAAT,EAAiBC,KAAjB,EAAwBC,YAAxB,QAA4C,QAA5C;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,IAAMC,YAAY,GAAG,SAAfA,YAAe,OAAiB;AAAA,MAAdC,OAAc,QAAdA,OAAc;AACpC,MAAMC,aAAa,GAAG;AACpBC,IAAAA,KAAK,EAAE,EADa;AAEpBC,IAAAA,IAAI,EAAE;AAFc,GAAtB;;AAKA,MAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,MAAD,EAAY;AAC/B,QAAMC,MAAM,GAAG,EAAf;;AAEA,QAAI,CAACD,MAAM,CAACH,KAAZ,EAAmB;AACjBI,MAAAA,MAAM,CAACJ,KAAP,GAAe,mBAAf;AACD;;AAED,QAAI,CAACG,MAAM,CAACF,IAAZ,EAAkB;AAChBG,MAAAA,MAAM,CAACH,IAAP,GAAc,yBAAd;AACD;;AAED,WAAOG,MAAP;AACD,GAZD;;AAcA,MAAMC,YAAY,GAAG,SAAfA,YAAe,CAACF,MAAD,SAA0C;AAAA,QAA/BG,aAA+B,SAA/BA,aAA+B;AAAA,QAAhBC,SAAgB,SAAhBA,SAAgB;AAC7D,QAAMH,MAAM,GAAGF,YAAY,CAACC,MAAD,CAA3B;;AAEA,QAAIK,MAAM,CAACC,IAAP,CAAYL,MAAZ,EAAoBM,MAApB,GAA6B,CAAjC,EAAoC;AAClC;AACAJ,MAAAA,aAAa,CAAC,KAAD,CAAb;AACD,KAHD,MAGO;AACL;AACAR,MAAAA,OAAO,CAACK,MAAD,CAAP;AACAI,MAAAA,SAAS;AACV;AACF,GAXD;;AAaA,SACE,oBAAC,MAAD;AAAQ,IAAA,aAAa,EAAER,aAAvB;AAAsC,IAAA,QAAQ,EAAEG,YAAhD;AAA8D,IAAA,QAAQ,EAAEG,YAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG;AAAA,QAAGM,YAAH,SAAGA,YAAH;AAAA,WACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAEE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,IAAI,EAAC,OAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE,oBAAC,YAAD;AAAc,MAAA,IAAI,EAAC,OAAnB;AAA2B,MAAA,SAAS,EAAC,KAArC;AAA2C,MAAA,SAAS,EAAC,OAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,CADF,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPF,EASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAEE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,IAAI,EAAC,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE,oBAAC,YAAD;AAAc,MAAA,IAAI,EAAC,MAAnB;AAA0B,MAAA,SAAS,EAAC,KAApC;AAA0C,MAAA,SAAS,EAAC,OAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,CATF,EAeE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAfF,EAiBE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,QAAQ,EAAEA,YAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGA,YAAY,GAAG,eAAH,GAAqB,QADpC,CAjBF,CAFF,EAwBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sFAxBF,CADD;AAAA,GADH,CADF;AAoCD,CArED;;AAuEA,eAAed,YAAf","sourcesContent":["import { Formik, Field, ErrorMessage } from 'formik';\r\nimport React from 'react';\r\n\r\nconst SimpleFormik = ({ addCard }) => {\r\n  const initialValues = {\r\n    title: '',\r\n    text: '',\r\n  };\r\n\r\n  const validateForm = (values) => {\r\n    const errors = {};\r\n\r\n    if (!values.title) {\r\n      errors.title = 'Title is required';\r\n    }\r\n\r\n    if (!values.text) {\r\n      errors.text = 'Description is required';\r\n    }\r\n\r\n    return errors;\r\n  };\r\n\r\n  const handleSubmit = (values, { setSubmitting, resetForm }) => {\r\n    const errors = validateForm(values);\r\n\r\n    if (Object.keys(errors).length > 0) {\r\n      // Set the form submission as not complete and let Formik handle the error display\r\n      setSubmitting(false);\r\n    } else {\r\n      // Proceed with the submission\r\n      addCard(values);\r\n      resetForm();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Formik initialValues={initialValues} validate={validateForm} onSubmit={handleSubmit}>\r\n      {({ isSubmitting }) => (\r\n        <div>\r\n          <h1>Simple Formik</h1>\r\n          <form>\r\n            <label>\r\n              Title:\r\n              <Field type=\"text\" name=\"title\" />\r\n              <ErrorMessage name=\"title\" component=\"div\" className=\"error\" />\r\n            </label>\r\n\r\n            <br />\r\n\r\n            <label>\r\n              Description:\r\n              <Field type=\"text\" name=\"text\" />\r\n              <ErrorMessage name=\"text\" component=\"div\" className=\"error\" />\r\n            </label>\r\n\r\n            <br />\r\n\r\n            <button type=\"submit\" disabled={isSubmitting}>\r\n              {isSubmitting ? 'Submitting...' : 'Submit'}\r\n            </button>\r\n          </form>\r\n\r\n          <style>{`\r\n            .error {\r\n              color: red;\r\n            }\r\n          `}</style>\r\n        </div>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default SimpleFormik;"]},"metadata":{},"sourceType":"module"}