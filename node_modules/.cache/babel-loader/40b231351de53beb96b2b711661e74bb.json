{"ast":null,"code":"import _classCallCheck from \"D:\\\\react_training\\\\ReactJsOld\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\react_training\\\\ReactJsOld\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\react_training\\\\ReactJsOld\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\react_training\\\\ReactJsOld\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\react_training\\\\ReactJsOld\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\react_training\\\\ReactJsOld\\\\src\\\\views\\\\containers\\\\Demo\\\\FormikDemo.js\";\nimport React, { Component } from 'react';\nimport { Container, Card } from 'react-bootstrap';\nimport { demoSelectors } from './state';\nimport { connect } from 'react-redux';\nimport FormTemplate from '../../components/FormTemplate';\n\nvar FormikDemo =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(FormikDemo, _Component);\n\n  function FormikDemo() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, FormikDemo);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(FormikDemo)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      errors: {}\n    };\n\n    _this.handleSubmit = function (values) {\n      console.log(values);\n      alert(\"File: \" + values.Basic.uploadFile + \"\\nForm Values: \".concat(JSON.stringify(values)));\n    };\n\n    return _this;\n  }\n\n  _createClass(FormikDemo, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, \"Formik Demo\"), React.createElement(FormTemplate, Object.assign({}, this.props, {\n        validate: demoSelectors.validateForm,\n        handleSubmit: this.handleSubmit,\n        formButtons: [{\n          variant: \"success\",\n          label: \"Display State\",\n          submit: true\n        }, {\n          variant: \"primary\",\n          label: \"Dummy Button\",\n          onClick: function onClick() {\n            return alert(\"Cancel clicked\");\n          }\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return FormikDemo;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    formInputs: state.demo.basicForm,\n    selectInput: state.demo.selectInput,\n    checkboxInput: state.demo.checkboxInput,\n    radioInput: state.demo.radioInput\n  };\n};\n\nexport default connect(mapStateToProps)(FormikDemo);","map":{"version":3,"sources":["D:\\react_training\\ReactJsOld\\src\\views\\containers\\Demo\\FormikDemo.js"],"names":["React","Component","Container","Card","demoSelectors","connect","FormTemplate","FormikDemo","state","errors","handleSubmit","values","console","log","alert","Basic","uploadFile","JSON","stringify","props","validateForm","variant","label","submit","onClick","mapStateToProps","formInputs","demo","basicForm","selectInput","checkboxInput","radioInput"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,SAAT,EAAoBC,IAApB,QAAgC,iBAAhC;AACA,SAASC,aAAT,QAA8B,SAA9B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,YAAP,MAAyB,+BAAzB;;IAEMC,U;;;;;;;;;;;;;;;;;UACFC,K,GAAQ;AAAEC,MAAAA,MAAM,EAAE;AAAV,K;;UAERC,Y,GAAe,UAACC,MAAD,EAAY;AACvBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACAG,MAAAA,KAAK,CAAC,WAAWH,MAAM,CAACI,KAAP,CAAaC,UAAxB,4BAAuDC,IAAI,CAACC,SAAL,CAAeP,MAAf,CAAvD,CAAD,CAAL;AACH,K;;;;;;;6BAEQ;AACL,aACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADJ,EAEI,oBAAC,YAAD,oBACQ,KAAKQ,KADb;AAEI,QAAA,QAAQ,EAAEf,aAAa,CAACgB,YAF5B;AAGI,QAAA,YAAY,EAAE,KAAKV,YAHvB;AAII,QAAA,WAAW,EAAE,CACT;AAAEW,UAAAA,OAAO,EAAE,SAAX;AAAsBC,UAAAA,KAAK,EAAE,eAA7B;AAA8CC,UAAAA,MAAM,EAAE;AAAtD,SADS,EAET;AAAEF,UAAAA,OAAO,EAAE,SAAX;AAAsBC,UAAAA,KAAK,EAAE,cAA7B;AAA6CE,UAAAA,OAAO,EAAE;AAAA,mBAAMV,KAAK,CAAC,gBAAD,CAAX;AAAA;AAAtD,SAFS,CAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAFJ,CADJ,CADJ;AAgBH;;;;EAzBoBb,S;;AA4BzB,IAAMwB,eAAe,GAAG,SAAlBA,eAAkB,CAACjB,KAAD,EAAW;AAC/B,SAAO;AACHkB,IAAAA,UAAU,EAAElB,KAAK,CAACmB,IAAN,CAAWC,SADpB;AAEHC,IAAAA,WAAW,EAAErB,KAAK,CAACmB,IAAN,CAAWE,WAFrB;AAGHC,IAAAA,aAAa,EAAEtB,KAAK,CAACmB,IAAN,CAAWG,aAHvB;AAIHC,IAAAA,UAAU,EAAEvB,KAAK,CAACmB,IAAN,CAAWI;AAJpB,GAAP;AAMH,CAPD;;AASA,eAAe1B,OAAO,CAACoB,eAAD,CAAP,CAAyBlB,UAAzB,CAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { Container, Card } from 'react-bootstrap';\r\nimport { demoSelectors } from './state';\r\nimport { connect } from 'react-redux';\r\nimport FormTemplate from '../../components/FormTemplate';\r\n\r\nclass FormikDemo extends Component {\r\n    state = { errors: {} }\r\n\r\n    handleSubmit = (values) => {\r\n        console.log(values)\r\n        alert(`File: ` + values.Basic.uploadFile + `\\nForm Values: ${JSON.stringify(values)}`);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Container>\r\n                <Card>\r\n                    <h4>Formik Demo</h4>\r\n                    <FormTemplate\r\n                        {...this.props}\r\n                        validate={demoSelectors.validateForm}\r\n                        handleSubmit={this.handleSubmit}\r\n                        formButtons={[\r\n                            { variant: \"success\", label: \"Display State\", submit: true },\r\n                            { variant: \"primary\", label: \"Dummy Button\", onClick: () => alert(\"Cancel clicked\") }\r\n                        ]}\r\n                    />\r\n                </Card>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        formInputs: state.demo.basicForm,\r\n        selectInput: state.demo.selectInput,\r\n        checkboxInput: state.demo.checkboxInput,\r\n        radioInput: state.demo.radioInput\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(FormikDemo);"]},"metadata":{},"sourceType":"module"}