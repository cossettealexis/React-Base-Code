{"ast":null,"code":"import _objectSpread from \"D:\\\\react_training\\\\ReactJsOld\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\n//Import the action types\nimport * as types from \"./types\";\nvar defaultState = {\n  reducerVariable: \"Add Form\",\n  table: {\n    // Table headers\n    tableHeader: [\"ID\", \"Name\", \"Position\", \"Birthdate\", \"Gender\", \"\"],\n    //The array values should match the names or [\"keys\"] on the list array data.\n    tableColumns: [\"id\", \"name\", \"position\", \"birthdate\", \"gender\"]\n  },\n  list: [],\n  //holds the data to be presented on the table\n  employeeForm: {\n    // Form\n    model: \"EmployeeForm\",\n    //Define your model name\n    form: [{\n      type: \"text\",\n      label: \"Employee ID\",\n      name: \"id\",\n      default: ''\n    }, {\n      type: \"text\",\n      label: \"Full Name\",\n      name: \"name\",\n      default: ''\n    }, {\n      type: \"text\",\n      label: \"Position\",\n      name: \"position\",\n      default: ''\n    }, {\n      type: \"number\",\n      label: \"Salary\",\n      name: \"salary\",\n      default: 0\n    }, {\n      type: \"datepicker\",\n      label: \"Birthdate\",\n      name: \"birthdate\"\n    }, {\n      type: \"radio\",\n      label: \"Gender\",\n      name: \"gender\",\n      inline: false,\n      default: ''\n    }, {\n      type: \"checkbox\",\n      label: \"Regular?\",\n      name: \"regular\",\n      default: false\n    }, {\n      type: \"multi-checkbox\",\n      label: \"Technologies\",\n      name: \"technologies\",\n      inline: false,\n      default: []\n    }]\n  },\n  radioInput: [{\n    name: \"gender\",\n    value: \"Male\",\n    label: \"Male\"\n  }, {\n    name: \"gender\",\n    value: \"Female\",\n    label: \"Female\"\n  }],\n  checkboxInput: [{\n    name: \"technologies\",\n    value: 1,\n    label: \"C#\"\n  }, {\n    name: \"technologies\",\n    value: 2,\n    label: \"Java\"\n  }, {\n    name: \"technologies\",\n    value: 3,\n    label: \"PHP\"\n  }, {\n    name: \"technologies\",\n    value: 4,\n    label: \"Javascript\"\n  }] //Define how the states will change based on the dispatched action\n\n};\nexport default function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : defaultState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case types.UPDATE_STATE:\n      return _objectSpread({}, state, {\n        list: action.payload\n      });\n\n    default:\n      return state;\n  }\n}\n;","map":{"version":3,"sources":["D:\\react_training\\ReactJsOld\\src\\views\\containers\\Employee\\state\\reducers.js"],"names":["types","defaultState","reducerVariable","table","tableHeader","tableColumns","list","employeeForm","model","form","type","label","name","default","inline","radioInput","value","checkboxInput","reducer","state","action","UPDATE_STATE","payload"],"mappings":"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","sourcesContent":["//Import the action types\r\nimport * as types from \"./types\";\r\n\r\nconst defaultState = {\r\n    reducerVariable: \"Add Form\",\r\n    table: {\r\n        // Table headers\r\n        tableHeader: [\r\n            \"ID\",\r\n            \"Name\",\r\n            \"Position\",\r\n            \"Birthdate\",\r\n            \"Gender\",\r\n            \"\"\r\n        ],\r\n\r\n        //The array values should match the names or [\"keys\"] on the list array data.\r\n        tableColumns: [\r\n            \"id\",\r\n            \"name\",\r\n            \"position\",\r\n            \"birthdate\",\r\n            \"gender\"\r\n        ]\r\n    },\r\n    list: [\r\n    ], //holds the data to be presented on the table\r\n\r\n    employeeForm: { // Form\r\n        model: \"EmployeeForm\",   //Define your model name\r\n        form: [\r\n            {\r\n                type: \"text\",\r\n                label: \"Employee ID\",\r\n                name: \"id\",\r\n                default: ''\r\n            },\r\n            {\r\n                type: \"text\",\r\n                label: \"Full Name\",\r\n                name: \"name\",\r\n                default: ''\r\n            },\r\n            {\r\n                type: \"text\",\r\n                label: \"Position\",\r\n                name: \"position\",\r\n                default: ''\r\n            },\r\n            {\r\n                type: \"number\",\r\n                label: \"Salary\",\r\n                name: \"salary\",\r\n                default: 0\r\n            },\r\n            {\r\n                type: \"datepicker\",\r\n                label: \"Birthdate\",\r\n                name: \"birthdate\"\r\n            },\r\n            {\r\n                type: \"radio\",\r\n                label: \"Gender\",\r\n                name: \"gender\",\r\n                inline: false,\r\n                default: ''\r\n            },\r\n            {\r\n                type: \"checkbox\",\r\n                label: \"Regular?\",\r\n                name: \"regular\",\r\n                default: false\r\n            },\r\n            {\r\n                type: \"multi-checkbox\",\r\n                label: \"Technologies\",\r\n                name: \"technologies\",\r\n                inline: false,\r\n                default: []\r\n            },\r\n        ],\r\n\r\n    },\r\n\r\n    radioInput: [\r\n        { name: \"gender\", value: \"Male\", label: \"Male\" },\r\n        { name: \"gender\", value: \"Female\", label: \"Female\" },\r\n    ],\r\n    checkboxInput: [\r\n        { name: \"technologies\", value: 1, label: \"C#\" },\r\n        { name: \"technologies\", value: 2, label: \"Java\" },\r\n        { name: \"technologies\", value: 3, label: \"PHP\" },\r\n        { name: \"technologies\", value: 4, label: \"Javascript\" }\r\n    ],\r\n\r\n}\r\n\r\n//Define how the states will change based on the dispatched action\r\nexport default function reducer(state = defaultState, action) {\r\n    switch (action.type) {\r\n        case types.UPDATE_STATE:\r\n            return {\r\n                ...state,\r\n                list: action.payload\r\n            };\r\n        default: return state;\r\n    }\r\n};"]},"metadata":{},"sourceType":"module"}