{"ast":null,"code":"import ApiService from \"../../../../utils/apiService\";\nimport * as Path from './apiRoutes'; //Import the action creators\n\nimport * as Actions from \"./actions\"; //EMPLOYEE\n\nexport var getListEmployee = function getListEmployee() {\n  return function (dispatch) {\n    ApiService.get(Path.ROOT).then(function (response) {\n      if (response) {\n        dispatch(Actions.updateState(response.data));\n      }\n\n      return response.data;\n    }).catch(function (error) {\n      console.error(error);\n    });\n  };\n};\nexport var getEmployeeById = function getEmployeeById(id) {\n  return function (dispatch) {\n    return ApiService.get(Path.ROOT + \"/\" + id).then(function (response) {\n      if (response.data) {\n        return response.data;\n      }\n    }).catch(function (error) {\n      console.error(error);\n    });\n  };\n};\nexport var addEmployee = function addEmployee(values) {\n  return function (dispatch) {\n    ApiService.post(Path.ROOT + \"/\", values).then(function (response) {\n      if (response) {\n        dispatch(getListEmployee());\n      }\n    }).catch(function (error) {\n      console.error(error);\n    });\n  };\n};\nexport var updateEmployee = function updateEmployee(values, id) {\n  return function (dispatch) {\n    ApiService.patch(Path.ROOT + \"/\" + id, values).then(function () {\n      dispatch(getListEmployee());\n    });\n  };\n};\nexport var deleteEmployee = function deleteEmployee(id) {\n  return function (dispatch) {\n    ApiService.delete(Path.ROOT + \"/\" + id).then(function (response) {\n      if (response) {\n        dispatch(getListEmployee());\n      }\n    }).catch(function (error) {\n      console.error(error);\n    });\n  };\n};","map":{"version":3,"sources":["D:\\react_training\\ReactJsOld\\src\\views\\containers\\Employee\\state\\operations.js"],"names":["ApiService","Path","Actions","getListEmployee","dispatch","get","ROOT","then","response","updateState","data","catch","error","console","getEmployeeById","id","addEmployee","values","post","updateEmployee","patch","deleteEmployee","delete"],"mappings":"AACA,OAAOA,UAAP,MAAuB,8BAAvB;AACA,OAAO,KAAKC,IAAZ,MAAsB,aAAtB,C,CAEA;;AACA,OAAO,KAAKC,OAAZ,MAAyB,WAAzB,C,CAGA;;AACA,OAAO,IAAMC,eAAe,GAAG,SAAlBA,eAAkB;AAAA,SAAM,UAACC,QAAD,EAAc;AAC/CJ,IAAAA,UAAU,CAACK,GAAX,CAAeJ,IAAI,CAACK,IAApB,EACKC,IADL,CACU,UAACC,QAAD,EAAc;AAChB,UAAIA,QAAJ,EAAc;AACVJ,QAAAA,QAAQ,CAACF,OAAO,CAACO,WAAR,CAAoBD,QAAQ,CAACE,IAA7B,CAAD,CAAR;AACH;;AACD,aAAOF,QAAQ,CAACE,IAAhB;AAEH,KAPL,EAQKC,KARL,CAQW,UAACC,KAAD,EAAW;AACdC,MAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACH,KAVL;AAWH,GAZ8B;AAAA,CAAxB;AAcP,OAAO,IAAME,eAAe,GAAG,SAAlBA,eAAkB,CAACC,EAAD;AAAA,SAAQ,UAACX,QAAD,EAAc;AACjD,WAAOJ,UAAU,CAACK,GAAX,CAAeJ,IAAI,CAACK,IAAL,GAAY,GAAZ,GAAkBS,EAAjC,EACFR,IADE,CACG,UAACC,QAAD,EAAc;AAChB,UAAIA,QAAQ,CAACE,IAAb,EAAmB;AACf,eAAOF,QAAQ,CAACE,IAAhB;AACH;AACJ,KALE,EAMFC,KANE,CAMI,UAACC,KAAD,EAAW;AACdC,MAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACH,KARE,CAAP;AASH,GAV8B;AAAA,CAAxB;AAYP,OAAO,IAAMI,WAAW,GAAG,SAAdA,WAAc,CAACC,MAAD;AAAA,SAAY,UAACb,QAAD,EAAc;AACjDJ,IAAAA,UAAU,CAACkB,IAAX,CAAgBjB,IAAI,CAACK,IAAL,GAAY,GAA5B,EAAiCW,MAAjC,EACKV,IADL,CACU,UAACC,QAAD,EAAc;AAChB,UAAIA,QAAJ,EAAc;AACVJ,QAAAA,QAAQ,CAACD,eAAe,EAAhB,CAAR;AACH;AACJ,KALL,EAMKQ,KANL,CAMW,UAACC,KAAD,EAAW;AACdC,MAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACH,KARL;AASH,GAV0B;AAAA,CAApB;AAYP,OAAO,IAAMO,cAAc,GAAG,SAAjBA,cAAiB,CAACF,MAAD,EAASF,EAAT;AAAA,SAAgB,UAACX,QAAD,EAAc;AACxDJ,IAAAA,UAAU,CAACoB,KAAX,CAAiBnB,IAAI,CAACK,IAAL,GAAY,GAAZ,GAAkBS,EAAnC,EAAuCE,MAAvC,EACKV,IADL,CACU,YAAM;AACRH,MAAAA,QAAQ,CAACD,eAAe,EAAhB,CAAR;AACH,KAHL;AAIH,GAL6B;AAAA,CAAvB;AAOP,OAAO,IAAMkB,cAAc,GAAG,SAAjBA,cAAiB,CAACN,EAAD;AAAA,SAAQ,UAACX,QAAD,EAAc;AAChDJ,IAAAA,UAAU,CAACsB,MAAX,CAAkBrB,IAAI,CAACK,IAAL,GAAY,GAAZ,GAAkBS,EAApC,EACKR,IADL,CACU,UAACC,QAAD,EAAc;AAChB,UAAIA,QAAJ,EAAc;AACVJ,QAAAA,QAAQ,CAACD,eAAe,EAAhB,CAAR;AACH;AACJ,KALL,EAMKQ,KANL,CAMW,UAACC,KAAD,EAAW;AACdC,MAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACH,KARL;AASH,GAV6B;AAAA,CAAvB","sourcesContent":["\r\nimport ApiService from \"../../../../utils/apiService\";\r\nimport * as Path from './apiRoutes';\r\n\r\n//Import the action creators\r\nimport * as Actions from \"./actions\";\r\n\r\n\r\n//EMPLOYEE\r\nexport const getListEmployee = () => (dispatch) => {\r\n    ApiService.get(Path.ROOT)\r\n        .then((response) => {\r\n            if (response) {\r\n                dispatch(Actions.updateState(response.data));\r\n            }\r\n            return response.data;\r\n\r\n        })\r\n        .catch((error) => {\r\n            console.error(error);\r\n        })\r\n}\r\n\r\nexport const getEmployeeById = (id) => (dispatch) => {\r\n    return ApiService.get(Path.ROOT + \"/\" + id)\r\n        .then((response) => {\r\n            if (response.data) {\r\n                return response.data;\r\n            }\r\n        })\r\n        .catch((error) => {\r\n            console.error(error);\r\n        })\r\n}\r\n\r\nexport const addEmployee = (values) => (dispatch) => {\r\n    ApiService.post(Path.ROOT + \"/\", values)\r\n        .then((response) => {\r\n            if (response) {\r\n                dispatch(getListEmployee());\r\n            }\r\n        })\r\n        .catch((error) => {\r\n            console.error(error);\r\n        })\r\n}\r\n\r\nexport const updateEmployee = (values, id) => (dispatch) => {\r\n    ApiService.patch(Path.ROOT + \"/\" + id, values)\r\n        .then(() => {\r\n            dispatch(getListEmployee());\r\n        })\r\n}\r\n\r\nexport const deleteEmployee = (id) => (dispatch) => {\r\n    ApiService.delete(Path.ROOT + \"/\" + id)\r\n        .then((response) => {\r\n            if (response) {\r\n                dispatch(getListEmployee());\r\n            }\r\n        })\r\n        .catch((error) => {\r\n            console.error(error);\r\n        })\r\n}"]},"metadata":{},"sourceType":"module"}