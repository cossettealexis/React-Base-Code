{"ast":null,"code":"import _objectDestructuringEmpty from \"D:\\\\react_training\\\\ReactJsOld\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectDestructuringEmpty\";\nimport _slicedToArray from \"D:\\\\react_training\\\\ReactJsOld\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"D:\\\\react_training\\\\ReactJsOld\\\\src\\\\views\\\\components\\\\SimpleFormik.js\";\nimport { Formik } from 'formik';\nimport { add } from 'lodash';\nimport React, { useState } from 'react';\n\nvar SimpleFormik = function SimpleFormik(_ref) {\n  var addData = _ref.addData;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      title = _useState2[0],\n      setTitle = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      text = _useState4[0],\n      setText = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      titleError = _useState6[0],\n      setTitleError = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      textError = _useState8[0],\n      setTextError = _useState8[1];\n\n  var _useState9 = useState({\n    title: \"\",\n    description: \"\"\n  }),\n      _useState10 = _slicedToArray(_useState9, 2),\n      initialValues = _useState10[0],\n      setInitialValues = _useState10[1];\n\n  var validateForm = function validateForm(values) {\n    var errors = {};\n\n    if (!values.title) {\n      errors.title = 'Title is required';\n    }\n\n    if (!values.text) {\n      errors.text = 'Text is required';\n    }\n\n    return errors;\n  };\n\n  var handleSubmit = function handleSubmit(values) {\n    values.preventDefault();\n    var isValid = true;\n    console.log(\"been here\"); //validate fields\n\n    if (title.trim() === '') {\n      setTitleError('Title is required');\n      isValid = false;\n    } else {\n      setTitleError('');\n    }\n\n    if (text.trim() === '') {\n      setTextError('Text is required');\n      isValid = false;\n    } else {\n      setTextError('');\n    } //if is valid\n\n\n    if (isValid) {\n      addData({\n        title: title,\n        text: text\n      });\n      setTitle(\"\");\n      setText(\"\");\n    }\n  };\n\n  return React.createElement(Formik, {\n    initialValues: initialValues,\n    validate: validateForm,\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, function (_ref2) {\n    _objectDestructuringEmpty(_ref2);\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"Simple Formik\"), React.createElement(\"form\", {\n      onSubmit: handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"Title:\", React.createElement(\"input\", {\n      type: \"text\",\n      id: \"title\",\n      value: title,\n      onChange: function onChange(e) {\n        return setTitle(e.target.value);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }), titleError && React.createElement(\"div\", {\n      className: \"error\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, titleError)), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \"Description:\", React.createElement(\"input\", {\n      type: \"text\",\n      id: \"description\",\n      value: text,\n      onChange: function onChange(e) {\n        return setText(e.target.value);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }), textError && React.createElement(\"div\", {\n      className: \"error\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, textError)), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"Submit\")), React.createElement(\"style\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \"\\n                        .error {\\n                        color: red;\\n                        }\\n                    \"));\n  });\n};\n\nexport default SimpleFormik;","map":{"version":3,"sources":["D:\\react_training\\ReactJsOld\\src\\views\\components\\SimpleFormik.js"],"names":["Formik","add","React","useState","SimpleFormik","addData","title","setTitle","text","setText","titleError","setTitleError","textError","setTextError","description","initialValues","setInitialValues","validateForm","values","errors","handleSubmit","preventDefault","isValid","console","log","trim","e","target","value"],"mappings":"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","sourcesContent":["import { Formik } from 'formik';\r\nimport { add } from 'lodash';\r\nimport React, { useState } from 'react';\r\n\r\nconst SimpleFormik = ({addData}) => {\r\n\r\n    const [title, setTitle] = useState(\"\");\r\n    const [text, setText] = useState(\"\");\r\n    const [titleError, setTitleError] = useState('');\r\n    const [textError, setTextError] = useState('');\r\n    \r\n    const [initialValues, setInitialValues] =useState({\r\n        title: \"\",\r\n        description: \"\"\r\n    });\r\n\r\n    const validateForm = (values) => {\r\n        const errors = {};\r\n    \r\n        if (!values.title) {\r\n          errors.title = 'Title is required';\r\n        }\r\n    \r\n        if (!values.text) {\r\n          errors.text = 'Text is required';\r\n        }\r\n    \r\n        return errors;\r\n      };\r\n    \r\n\r\n    const handleSubmit = (values) => {\r\n        values.preventDefault()\r\n        let isValid = true;\r\n        console.log(\"been here\")\r\n\r\n        //validate fields\r\n        if (title.trim() === '') {\r\n            setTitleError('Title is required');\r\n            isValid = false;\r\n        } else {\r\n            setTitleError('');\r\n        }\r\n    \r\n        if (text.trim() === '') {\r\n            setTextError('Text is required');\r\n            isValid = false;\r\n        } else {\r\n            setTextError('');\r\n        }\r\n\r\n        //if is valid\r\n        if (isValid) {\r\n        addData({title, text})\r\n        setTitle(\"\")\r\n        setText(\"\")\r\n        }  \r\n        \r\n      };\r\n\r\n    return(\r\n        <Formik\r\n            initialValues={initialValues}\r\n            validate={validateForm}\r\n            onSubmit={handleSubmit}\r\n        >\r\n            {({}) => (\r\n                <div>\r\n                    <h1>Simple Formik</h1>\r\n                    <form onSubmit={handleSubmit}>\r\n                        <label>Title:\r\n                            <input\r\n                            type=\"text\"\r\n                            id=\"title\"\r\n                            value={title}\r\n                            onChange={(e) => setTitle(e.target.value)}\r\n                            />\r\n                            {titleError && <div className=\"error\">{titleError}</div>}\r\n                        </label>\r\n                        \r\n                        <br></br>\r\n                        <label>Description:\r\n                            <input \r\n                            type=\"text\"\r\n                            id=\"description\"\r\n                            value={text}\r\n                            onChange={(e) => setText(e.target.value)}\r\n                            />\r\n                            {textError && <div className=\"error\">{textError}</div>}\r\n                        </label>\r\n                        <br></br>\r\n                        <button type=\"submit\">Submit</button>\r\n                    </form>\r\n                    <style>{`\r\n                        .error {\r\n                        color: red;\r\n                        }\r\n                    `}</style>\r\n                </div>\r\n            )}\r\n        </Formik>\r\n        \r\n    )\r\n}\r\n\r\nexport default SimpleFormik;"]},"metadata":{},"sourceType":"module"}