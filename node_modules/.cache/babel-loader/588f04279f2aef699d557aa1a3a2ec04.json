{"ast":null,"code":"import _defineProperty from \"D:\\\\react_training\\\\ReactJsOld\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"D:\\\\react_training\\\\ReactJsOld\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\react_training\\\\ReactJsOld\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\react_training\\\\ReactJsOld\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\react_training\\\\ReactJsOld\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\react_training\\\\ReactJsOld\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"D:\\\\react_training\\\\ReactJsOld\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"D:\\\\react_training\\\\ReactJsOld\\\\src\\\\views\\\\containers\\\\Login\\\\LoginScreen.js\";\nimport React, { Component } from \"react\";\nimport { authOperations } from './state';\nimport { connect } from 'react-redux';\nimport { Button, FormGroup, FormControl, FormLabel, Container, Card } from \"react-bootstrap\";\nimport { Redirect, withRouter } from \"react-router-dom\";\nimport '../../../includes/custom/css/login.css';\nimport { ROOT } from \"../../../config/settings\";\nimport { bindActionCreators } from 'redux';\n\nvar LoginScreen =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(LoginScreen, _Component);\n\n  function LoginScreen(props) {\n    var _this;\n\n    _classCallCheck(this, LoginScreen);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(LoginScreen).call(this, props));\n\n    _this.handleChange = function (event) {\n      _this.setState(_defineProperty({}, event.target.id, event.target.value));\n    };\n\n    _this.handleSubmit = function (event) {\n      event.preventDefault();\n\n      _this.props.loginUser(\"demo@test.com\", \"demo\").then(function (result) {\n        if (0 >= result.length) {\n          _this.setState({\n            errorMessage: \"Incorrect username/password.\"\n          });\n        }\n      });\n    };\n\n    _this.state = {\n      email: \"demo@test.com\",\n      password: \"demo\",\n      logged: false,\n      errorMessage: \"\"\n    };\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(LoginScreen, [{\n    key: \"validateForm\",\n    value: function validateForm() {\n      return 0 < this.state.email.length && 0 < this.state.password.length;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      // Change the redirect to the main page of your app\n      if (this.props.isAuthenticated) {\n        return React.createElement(Redirect, {\n          to: ROOT,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47\n          },\n          __self: this\n        });\n      }\n\n      return React.createElement(Container, {\n        className: \"login-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(Card, {\n        className: \"login-card\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(\"center\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, \"Authentication Demo\")), React.createElement(\"center\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(\"h5\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, this.state.errorMessage)), React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        controlId: \"email\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(FormLabel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, \"Email\"), React.createElement(FormControl, {\n        size: \"lg\",\n        autoFocus: true,\n        type: \"email\",\n        value: this.state.email,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        controlId: \"password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(FormLabel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, \"Password\"), React.createElement(FormControl, {\n        size: \"lg\",\n        value: this.state.password,\n        onChange: this.handleChange,\n        type: \"password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      })), React.createElement(Button, {\n        block: true,\n        size: \"lg\",\n        disabled: !this.validateForm(),\n        onClick: this.handleSubmit,\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, \"Login\"))));\n    }\n  }]);\n\n  return LoginScreen;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    isAuthenticated: state.auth.isAuthenticated\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    loginUser: authOperations.loginUser\n  }, dispatch);\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(LoginScreen));","map":{"version":3,"sources":["D:\\react_training\\ReactJsOld\\src\\views\\containers\\Login\\LoginScreen.js"],"names":["React","Component","authOperations","connect","Button","FormGroup","FormControl","FormLabel","Container","Card","Redirect","withRouter","ROOT","bindActionCreators","LoginScreen","props","handleChange","event","setState","target","id","value","handleSubmit","preventDefault","loginUser","then","result","length","errorMessage","state","email","password","logged","bind","isAuthenticated","validateForm","mapStateToProps","auth","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { authOperations } from './state'\r\nimport { connect } from 'react-redux';\r\nimport { Button, FormGroup, FormControl, FormLabel, Container, Card } from \"react-bootstrap\";\r\nimport { Redirect, withRouter } from \"react-router-dom\";\r\nimport '../../../includes/custom/css/login.css';\r\nimport { ROOT } from \"../../../config/settings\";\r\nimport { bindActionCreators } from 'redux'\r\n\r\nclass LoginScreen extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      email: \"demo@test.com\",\r\n      password: \"demo\",\r\n      logged: false,\r\n      errorMessage: \"\",\r\n    };\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  validateForm() {\r\n    return 0 < this.state.email.length && 0 < this.state.password.length;\r\n  }\r\n\r\n  handleChange = (event) => {\r\n    this.setState({\r\n      [event.target.id]: event.target.value\r\n    });\r\n  }\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    this.props.loginUser(\"demo@test.com\", \"demo\")\r\n      .then((result) => {\r\n        if (0 >= result.length) {\r\n          this.setState({ errorMessage: \"Incorrect username/password.\" });\r\n        }\r\n      });\r\n\r\n  }\r\n\r\n  render() {\r\n    // Change the redirect to the main page of your app\r\n    if (this.props.isAuthenticated) {\r\n      return <Redirect to={ROOT} />;\r\n    }\r\n\r\n    return (\r\n      <Container className=\"login-container\">\r\n        <Card className=\"login-card\">\r\n          <center><h2>Authentication Demo</h2></center>\r\n          <center><h5>{this.state.errorMessage}</h5></center>\r\n          <form onSubmit={this.handleSubmit}>\r\n            <FormGroup controlId=\"email\">\r\n              <FormLabel>Email</FormLabel>\r\n              <FormControl\r\n                size=\"lg\"\r\n                autoFocus\r\n                type=\"email\"\r\n                value={this.state.email}\r\n                onChange={this.handleChange}\r\n              />\r\n            </FormGroup>\r\n            <FormGroup controlId=\"password\">\r\n              <FormLabel>Password</FormLabel>\r\n              <FormControl\r\n                size=\"lg\"\r\n                value={this.state.password}\r\n                onChange={this.handleChange}\r\n                type=\"password\"\r\n              />\r\n            </FormGroup>\r\n            <Button\r\n              block\r\n              size=\"lg\"\r\n              disabled={!this.validateForm()}\r\n              onClick={this.handleSubmit}\r\n              type=\"submit\"\r\n            >\r\n              Login\r\n            </Button>\r\n          </form>\r\n        </Card>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    isAuthenticated: state.auth.isAuthenticated,\r\n  }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => bindActionCreators(\r\n  {\r\n    loginUser: authOperations.loginUser\r\n  }, \r\n  dispatch\r\n);\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(LoginScreen));"]},"metadata":{},"sourceType":"module"}