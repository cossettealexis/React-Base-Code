{"ast":null,"code":"import _classCallCheck from \"D:\\\\react_training\\\\ReactJsOld\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\react_training\\\\ReactJsOld\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\react_training\\\\ReactJsOld\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\react_training\\\\ReactJsOld\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\react_training\\\\ReactJsOld\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\react_training\\\\ReactJsOld\\\\src\\\\views\\\\containers\\\\Demo\\\\FileDemo.js\";\nimport React, { Component } from 'react';\nimport { Container, Card, Button, ButtonToolbar } from 'react-bootstrap';\nimport fileDownload from 'js-file-download';\n\nvar FileDemo =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(FileDemo, _Component);\n\n  function FileDemo() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, FileDemo);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(FileDemo)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      textarea: '',\n      filename: '',\n      fileExtension: '.txt',\n      uploadName: '',\n      uploadFile: ''\n    };\n\n    _this.downloadFile = function () {\n      var downloadType = \"text/plain\";\n\n      switch (_this.state.fileExtension) {\n        case '.xls':\n          downloadType = \"application/vnd.ms-excel\";\n          break;\n\n        case '.pdf':\n          downloadType = \"application/pdf\";\n          break;\n\n        case '.ppt':\n          downloadType = \"application/vnd.ms-powerpoint\";\n          break;\n\n        default:\n          break;\n      }\n\n      var file = new File([_this.state.textarea], \"\".concat(_this.state.filename, \".xls\"), {\n        type: downloadType\n      });\n      fileDownload(file, _this.state.filename + _this.state.fileExtension);\n    };\n\n    _this.uploadFile = function (e) {\n      var extension = _this.getFileExtension(e.target.files[0].name);\n\n      _this.setState({\n        uploadFile: e.target.files[0],\n        uploadFileExtension: \".\".concat(extension)\n      });\n    };\n\n    _this.downloadUploaded = function () {\n      fileDownload(_this.state.uploadFile, _this.state.uploadName + _this.state.uploadFileExtension);\n    };\n\n    _this.getFileExtension = function (filename) {\n      return filename.slice((filename.lastIndexOf(\".\") - 1 >>> 0) + 2);\n    };\n\n    return _this;\n  }\n\n  _createClass(FileDemo, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, React.createElement(Card, {\n        className: \"p-20\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, \"File Download\")), React.createElement(\"select\", {\n        className: \"test-input\",\n        value: this.state.fileExtension,\n        onChange: function onChange(e) {\n          return _this2.setState({\n            fileExtension: e.target.value\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \".txt\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, \"Text (.txt)\"), React.createElement(\"option\", {\n        value: \".xls\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, \"Excel (.xls)\"), React.createElement(\"option\", {\n        value: \".pdf\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, \"PDF (.pdf)\"), React.createElement(\"option\", {\n        value: \".ppt\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, \"Powerpoint (.ppt)\")), React.createElement(\"input\", {\n        className: \"test-input\",\n        onChange: function onChange(e) {\n          return _this2.setState({\n            filename: e.target.value\n          });\n        },\n        value: this.state.filename,\n        placeholder: \"Enter filename\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        className: \"test-input\",\n        onChange: function onChange(e) {\n          return _this2.setState({\n            textarea: e.target.value\n          });\n        },\n        value: this.state.textarea,\n        placeholder: \"Enter text content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }), React.createElement(ButtonToolbar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(Button, {\n        variant: \"primary\",\n        onClick: this.downloadFile,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, \"Download File\"))), React.createElement(Card, {\n        className: \"p-20\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(\"b\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, \"Upload then Download\")), React.createElement(\"input\", {\n        type: \"file\",\n        onChange: this.uploadFile,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        className: \"test-input\",\n        onChange: function onChange(e) {\n          return _this2.setState({\n            uploadName: e.target.value\n          });\n        },\n        value: this.state.uploadName,\n        placeholder: \"Enter filename\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }), React.createElement(ButtonToolbar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(Button, {\n        variant: \"primary\",\n        onClick: this.downloadUploaded,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, \"Download File\"))));\n    }\n  }]);\n\n  return FileDemo;\n}(Component);\n\nexport default FileDemo;","map":{"version":3,"sources":["D:\\react_training\\ReactJsOld\\src\\views\\containers\\Demo\\FileDemo.js"],"names":["React","Component","Container","Card","Button","ButtonToolbar","fileDownload","FileDemo","state","textarea","filename","fileExtension","uploadName","uploadFile","downloadFile","downloadType","file","File","type","e","extension","getFileExtension","target","files","name","setState","uploadFileExtension","downloadUploaded","slice","lastIndexOf","value"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Container, Card, Button, ButtonToolbar } from 'react-bootstrap';\r\nimport fileDownload from 'js-file-download';\r\nclass FileDemo extends Component {\r\n    state = {\r\n        textarea: '',\r\n        filename: '',\r\n        fileExtension: '.txt',\r\n        uploadName: '',\r\n        uploadFile: ''\r\n    }\r\n    downloadFile = () => {\r\n        let downloadType = \"text/plain\";\r\n        switch (this.state.fileExtension) {\r\n            case '.xls': downloadType = \"application/vnd.ms-excel\"; break;\r\n            case '.pdf': downloadType = \"application/pdf\"; break;\r\n            case '.ppt': downloadType = \"application/vnd.ms-powerpoint\"; break;\r\n            default: break;\r\n        }\r\n        let file = new File(\r\n            [this.state.textarea],\r\n            `${this.state.filename}.xls`,\r\n            { type: downloadType });\r\n\r\n        fileDownload(file, this.state.filename + this.state.fileExtension);\r\n    }\r\n    uploadFile = (e) => {\r\n        let extension = this.getFileExtension(e.target.files[0].name);\r\n        this.setState({ uploadFile: e.target.files[0], uploadFileExtension: `.${extension}` });\r\n    }\r\n    downloadUploaded = () => {\r\n        fileDownload(this.state.uploadFile, this.state.uploadName + this.state.uploadFileExtension);\r\n    }\r\n    getFileExtension = (filename) => {\r\n        return filename.slice((filename.lastIndexOf(\".\") - 1 >>> 0) + 2);\r\n    }\r\n    render() {\r\n        return (\r\n            <Container>\r\n                <Card className=\"p-20\">\r\n                    <h4><b>File Download</b></h4>\r\n                    <select className=\"test-input\" value={this.state.fileExtension} onChange={(e) => this.setState({ fileExtension: e.target.value })}>\r\n                        <option value=\".txt\">Text (.txt)</option>\r\n                        <option value=\".xls\">Excel (.xls)</option>\r\n                        <option value=\".pdf\">PDF (.pdf)</option>\r\n                        <option value=\".ppt\">Powerpoint (.ppt)</option>\r\n                    </select>\r\n                    <input\r\n                        className=\"test-input\"\r\n                        onChange={(e) => this.setState({ filename: e.target.value })}\r\n                        value={this.state.filename}\r\n                        placeholder={\"Enter filename\"}\r\n                    />\r\n                    <input\r\n                        className=\"test-input\"\r\n                        onChange={(e) => this.setState({ textarea: e.target.value })}\r\n                        value={this.state.textarea}\r\n                        placeholder={\"Enter text content\"}\r\n                    />\r\n                    <ButtonToolbar>\r\n                        <Button variant=\"primary\" onClick={this.downloadFile}>Download File</Button>\r\n                    </ButtonToolbar>\r\n                </Card>\r\n                <Card className=\"p-20\">\r\n                    <h4><b>Upload then Download</b></h4>\r\n                    <input type=\"file\" onChange={this.uploadFile} />\r\n                    <br />\r\n                    <input\r\n                        className=\"test-input\"\r\n                        onChange={(e) => this.setState({ uploadName: e.target.value })}\r\n                        value={this.state.uploadName}\r\n                        placeholder={\"Enter filename\"}\r\n                    />\r\n                    <ButtonToolbar>\r\n                        <Button variant=\"primary\" onClick={this.downloadUploaded}>Download File</Button>\r\n                    </ButtonToolbar>\r\n                </Card>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\nexport default FileDemo;"]},"metadata":{},"sourceType":"module"}