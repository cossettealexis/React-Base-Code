{"ast":null,"code":"import _classCallCheck from \"D:\\\\react_training\\\\ReactJsOld\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\react_training\\\\ReactJsOld\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\react_training\\\\ReactJsOld\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\react_training\\\\ReactJsOld\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\react_training\\\\ReactJsOld\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\react_training\\\\ReactJsOld\\\\src\\\\views\\\\containers\\\\Demo\\\\FormInitialValues.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Container, Card } from 'react-bootstrap';\nimport FormTemplate from '../../components/FormTemplate';\nimport ApiService from '../../../utils/apiService';\n\nvar FormInitialValues =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(FormInitialValues, _Component);\n\n  function FormInitialValues() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, FormInitialValues);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(FormInitialValues)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      initialFormValue: null,\n      toggle: false\n    };\n\n    _this.handleSubmit = function (values) {\n      alert(JSON.stringify(values));\n    };\n\n    return _this;\n  }\n\n  _createClass(FormInitialValues, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      ApiService.get(\"http://localhost:3030/initialForm\").then(function (result) {\n        //Make sure to copy the exact shape of your reducer data\n        _this2.setState({\n          initialFormValue: {\n            Initial: {\n              initialOne: result.data.valueOne,\n              initialTwo: result.data.valueTwo,\n              inputSelect: result.data.valueThree,\n              initialFour: result.data.valueFour,\n              multiCheckbox: result.data.valueFive,\n              radioInput: result.data.valueSix\n            }\n          }\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, \"Form with Initial Value (API Call)\"), React.createElement(FormTemplate, Object.assign({}, this.props, {\n        initialValues: this.state.initialFormValue,\n        editMode: true //add this to indicate edit mode and check initial values\n        ,\n        formButtons: [{\n          variant: \"success\",\n          label: \"Submit\",\n          submit: true\n        }],\n        handleSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return FormInitialValues;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    formInputs: state.demo.initialForm,\n    selectInput: state.demo.selectInput,\n    checkboxInput: state.demo.checkboxInput,\n    radioInput: state.demo.radioInput\n  };\n};\n\nexport default connect(mapStateToProps)(FormInitialValues);","map":{"version":3,"sources":["D:\\react_training\\ReactJsOld\\src\\views\\containers\\Demo\\FormInitialValues.js"],"names":["React","Component","connect","Container","Card","FormTemplate","ApiService","FormInitialValues","state","initialFormValue","toggle","handleSubmit","values","alert","JSON","stringify","get","then","result","setState","Initial","initialOne","data","valueOne","initialTwo","valueTwo","inputSelect","valueThree","initialFour","valueFour","multiCheckbox","valueFive","radioInput","valueSix","props","variant","label","submit","mapStateToProps","formInputs","demo","initialForm","selectInput","checkboxInput"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,SAAT,EAAoBC,IAApB,QAAgC,iBAAhC;AACA,OAAOC,YAAP,MAAyB,+BAAzB;AACA,OAAOC,UAAP,MAAuB,2BAAvB;;IAEMC,iB;;;;;;;;;;;;;;;;;UAEFC,K,GAAQ;AAAEC,MAAAA,gBAAgB,EAAE,IAApB;AAA0BC,MAAAA,MAAM,EAAE;AAAlC,K;;UAoBRC,Y,GAAe,UAACC,MAAD,EAAW;AACtBC,MAAAA,KAAK,CAACC,IAAI,CAACC,SAAL,CAAeH,MAAf,CAAD,CAAL;AACH,K;;;;;;;wCApBmB;AAAA;;AAChBN,MAAAA,UAAU,CAACU,GAAX,CAAe,mCAAf,EACKC,IADL,CACU,UAACC,MAAD,EAAY;AACd;AACA,QAAA,MAAI,CAACC,QAAL,CAAc;AACVV,UAAAA,gBAAgB,EAAC;AACbW,YAAAA,OAAO,EAAC;AACJC,cAAAA,UAAU,EAAEH,MAAM,CAACI,IAAP,CAAYC,QADpB;AAEJC,cAAAA,UAAU,EAAEN,MAAM,CAACI,IAAP,CAAYG,QAFpB;AAGJC,cAAAA,WAAW,EAAER,MAAM,CAACI,IAAP,CAAYK,UAHrB;AAIJC,cAAAA,WAAW,EAAEV,MAAM,CAACI,IAAP,CAAYO,SAJrB;AAKJC,cAAAA,aAAa,EAAEZ,MAAM,CAACI,IAAP,CAAYS,SALvB;AAMJC,cAAAA,UAAU,EAAEd,MAAM,CAACI,IAAP,CAAYW;AANpB;AADK;AADP,SAAd;AAWH,OAdL;AAeH;;;6BAMQ;AACL,aACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8CADJ,EAEI,oBAAC,YAAD,oBACQ,KAAKC,KADb;AAEI,QAAA,aAAa,EAAE,KAAK1B,KAAL,CAAWC,gBAF9B;AAGI,QAAA,QAAQ,EAAE,IAHd,CAGoB;AAHpB;AAII,QAAA,WAAW,EAAE,CACT;AAAC0B,UAAAA,OAAO,EAAE,SAAV;AAAqBC,UAAAA,KAAK,EAAE,QAA5B;AAAsCC,UAAAA,MAAM,EAAE;AAA9C,SADS,CAJjB;AAOI,QAAA,YAAY,EAAE,KAAK1B,YAPvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAFJ,CADJ,CADJ;AAgBH;;;;EA3C2BV,S;;AA8ChC,IAAMqC,eAAe,GAAG,SAAlBA,eAAkB,CAAC9B,KAAD,EAAW;AAC/B,SAAO;AACH+B,IAAAA,UAAU,EAAE/B,KAAK,CAACgC,IAAN,CAAWC,WADpB;AAEHC,IAAAA,WAAW,EAAElC,KAAK,CAACgC,IAAN,CAAWE,WAFrB;AAGHC,IAAAA,aAAa,EAAEnC,KAAK,CAACgC,IAAN,CAAWG,aAHvB;AAIHX,IAAAA,UAAU,EAAExB,KAAK,CAACgC,IAAN,CAAWR;AAJpB,GAAP;AAMH,CAPD;;AASA,eAAe9B,OAAO,CAACoC,eAAD,CAAP,CAAyB/B,iBAAzB,CAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Container, Card } from 'react-bootstrap';\r\nimport FormTemplate from '../../components/FormTemplate';\r\nimport ApiService from '../../../utils/apiService';\r\n\r\nclass FormInitialValues extends Component {\r\n\r\n    state = { initialFormValue: null, toggle: false }\r\n\r\n    componentDidMount() {\r\n        ApiService.get(\"http://localhost:3030/initialForm\")\r\n            .then((result) => {\r\n                //Make sure to copy the exact shape of your reducer data\r\n                this.setState({\r\n                    initialFormValue:{\r\n                        Initial:{\r\n                            initialOne: result.data.valueOne,\r\n                            initialTwo: result.data.valueTwo,\r\n                            inputSelect: result.data.valueThree,\r\n                            initialFour: result.data.valueFour,\r\n                            multiCheckbox: result.data.valueFive,\r\n                            radioInput: result.data.valueSix\r\n                        }\r\n                }})\r\n            })\r\n    }\r\n\r\n    handleSubmit = (values) =>{\r\n        alert(JSON.stringify(values));\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <Container>\r\n                <Card>\r\n                    <h3>Form with Initial Value (API Call)</h3>\r\n                    <FormTemplate \r\n                        {...this.props} \r\n                        initialValues={this.state.initialFormValue} \r\n                        editMode={true} //add this to indicate edit mode and check initial values\r\n                        formButtons={[\r\n                            {variant: \"success\", label: \"Submit\", submit: true}\r\n                        ]}\r\n                        handleSubmit={this.handleSubmit}\r\n                    />\r\n                </Card>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        formInputs: state.demo.initialForm,\r\n        selectInput: state.demo.selectInput,\r\n        checkboxInput: state.demo.checkboxInput,\r\n        radioInput: state.demo.radioInput\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(FormInitialValues);"]},"metadata":{},"sourceType":"module"}