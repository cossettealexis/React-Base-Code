{"ast":null,"code":"import _slicedToArray from \"D:\\\\react_training\\\\ReactJsOld\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"D:\\\\react_training\\\\ReactJsOld\\\\src\\\\views\\\\components\\\\SimpleFormik.js\";\nimport { Formik } from 'formik';\nimport { add } from 'lodash';\nimport React, { useState } from 'react';\n\nvar SimpleFormik = function SimpleFormik(_ref) {\n  var addCard = _ref.addCard;\n\n  var _useState = useState({\n    title: \"\",\n    description: \"\"\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      initialValues = _useState2[0],\n      setInitialValues = _useState2[1];\n\n  var handleCustomSubmit = function handleCustomSubmit(values) {\n    console.log(\"values: \", values);\n    addCard(values.title, values.description);\n  };\n\n  var handleTitleChange = function handleTitleChange(e, setFieldValue) {\n    console.log(\"title: \", e.target.value);\n    setFieldValue(\"title\", e.target.value);\n  };\n\n  var handleDescriptionChange = function handleDescriptionChange(e, setFieldValue) {\n    console.log(\"description: \", e.target.value);\n    setFieldValue(\"description\", e.target.value);\n  };\n\n  var _validate = function validate(values) {\n    var errors = {};\n\n    if (!values.title) {\n      errors.title = \"Title is required\";\n    }\n\n    if (!values.description) {\n      errors.description = \"Description is required\";\n    }\n\n    return errors;\n  };\n\n  return React.createElement(Formik, {\n    initialValues: initialValues,\n    validate: function validate(values) {\n      return _validate(values);\n    },\n    onSubmit: function onSubmit(values, _ref2) {\n      var resetForm = _ref2.resetForm,\n          setSubmitting = _ref2.setSubmitting;\n      setSubmitting(true);\n      setTimeout(function () {\n        handleCustomSubmit(values);\n        resetForm();\n        setSubmitting(false);\n      }, 1000);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, function (_ref3) {\n    var values = _ref3.values,\n        errors = _ref3.errors,\n        isSubmitting = _ref3.isSubmitting,\n        handleSubmit = _ref3.handleSubmit,\n        setFieldValue = _ref3.setFieldValue;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \"Simple Formik\"), React.createElement(\"form\", {\n      onSubmit: handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, isSubmitting && React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"Loading...\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"Title:\\xA0\"), React.createElement(\"input\", {\n      type: \"text\",\n      id: \"title\",\n      name: \"title\",\n      value: values.title,\n      onChange: function onChange(e) {\n        return handleTitleChange(e, setFieldValue);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }), errors.title && React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, \"\".concat(errors.title))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \"Description:\\xA0\"), React.createElement(\"input\", {\n      type: \"text\",\n      id: \"description\",\n      name: \"description\",\n      value: values.description,\n      onChange: function onChange(e) {\n        return handleDescriptionChange(e, setFieldValue);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }), errors.description && React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"\".concat(errors.description))), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"submit\",\n      disabled: isSubmitting,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"Submit\")));\n  });\n};\n\nexport default SimpleFormik;","map":{"version":3,"sources":["D:\\react_training\\ReactJsOld\\src\\views\\components\\SimpleFormik.js"],"names":["Formik","add","React","useState","SimpleFormik","addCard","title","description","initialValues","setInitialValues","handleCustomSubmit","values","console","log","handleTitleChange","e","setFieldValue","target","value","handleDescriptionChange","validate","errors","resetForm","setSubmitting","setTimeout","isSubmitting","handleSubmit"],"mappings":"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","sourcesContent":["import { Formik } from 'formik';\r\nimport { add } from 'lodash';\r\nimport React, { useState } from 'react';\r\n\r\nconst SimpleFormik = ({addCard}) => {\r\n    const [initialValues, setInitialValues] = useState({\r\n        title: \"\",\r\n        description: \"\"\r\n    });\r\n\r\n    const handleCustomSubmit = (values) => {\r\n        console.log(\"values: \", values);\r\n        addCard(values.title, values.description);\r\n    }\r\n\r\n    const handleTitleChange = (e, setFieldValue) => {\r\n        console.log(\"title: \", e.target.value);\r\n        setFieldValue(\"title\", e.target.value);\r\n    }\r\n\r\n    const handleDescriptionChange = (e, setFieldValue) => {\r\n        console.log(\"description: \", e.target.value);\r\n        setFieldValue(\"description\", e.target.value);\r\n    }\r\n\r\n    const validate = (values) => {\r\n        const errors = {}\r\n\r\n        if (!values.title) {\r\n            errors.title = \"Title is required\";\r\n        }\r\n\r\n        if (!values.description) {\r\n            errors.description = \"Description is required\";\r\n        }\r\n\r\n        return errors;\r\n    }\r\n\r\n    return(\r\n        <Formik\r\n            initialValues={initialValues}\r\n            validate={values => validate(values)}\r\n            onSubmit={(values, {resetForm, setSubmitting}) => {\r\n                setSubmitting(true);\r\n                setTimeout(() => {\r\n                    handleCustomSubmit(values);\r\n                    resetForm();\r\n                    setSubmitting(false);\r\n                }, 1000);\r\n            }}\r\n         >{({values, errors, isSubmitting, handleSubmit, setFieldValue}) => (\r\n            <div>\r\n                <h1>Simple Formik</h1>\r\n                <form onSubmit={handleSubmit}>\r\n                    {isSubmitting && <div>Loading...</div>}\r\n                    <div>\r\n                        <label>Title:&nbsp;</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            id=\"title\"\r\n                            name=\"title\"\r\n                            value={values.title}\r\n                            onChange={(e) => handleTitleChange(e, setFieldValue)}\r\n                        />\r\n                        {errors.title && <p>{`${errors.title}`}</p>}\r\n                    </div>\r\n                    <br/>\r\n                    <div>\r\n                        <label>Description:&nbsp;</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            id=\"description\"\r\n                            name=\"description\"\r\n                            value={values.description}\r\n                            onChange={(e) => handleDescriptionChange(e, setFieldValue)}\r\n                        />\r\n                        {errors.description && <p>{`${errors.description}`}</p>}\r\n                    </div>\r\n                    <br/>\r\n                    <button type=\"submit\" disabled={isSubmitting}>Submit</button>\r\n                </form>\r\n            </div>\r\n            )}\r\n        </Formik>\r\n    )\r\n}\r\n\r\nexport default SimpleFormik;"]},"metadata":{},"sourceType":"module"}