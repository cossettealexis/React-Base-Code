{"ast":null,"code":"import * as Actions from \"./actions\";\nimport * as Path from './apiRoutes';\nimport clearAuth from \"../../../../utils/clearAuth\";\nimport ApiService from \"../../../../utils/apiService\";\n\nvar loginUser = function loginUser(email, password) {\n  return function (dispatch) {\n    return ApiService.get(Path.LOGIN_USER + \"?email=\".concat(email, \"&password=\").concat(password)).then(function (response) {\n      if (0 < response.data.length) {\n        dispatch(Actions.setUserAuth(response.data[0], true));\n      }\n\n      return response.data;\n    }).catch(function (error) {\n      console.error(error);\n    });\n  };\n};\n\nvar logoutUser = function logoutUser() {\n  return function (dispatch) {\n    dispatch(Actions.setUserAuth([], false));\n    clearAuth();\n  };\n};\n\nexport { loginUser, logoutUser };","map":{"version":3,"sources":["D:\\react_training\\ReactJsOld\\src\\views\\containers\\Login\\state\\operations.js"],"names":["Actions","Path","clearAuth","ApiService","loginUser","email","password","dispatch","get","LOGIN_USER","then","response","data","length","setUserAuth","catch","error","console","logoutUser"],"mappings":"AAAA,OAAO,KAAKA,OAAZ,MAAyB,WAAzB;AACA,OAAO,KAAKC,IAAZ,MAAsB,aAAtB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAACC,KAAD,EAAQC,QAAR;AAAA,SAAqB,UAACC,QAAD,EAAa;AAChD,WAAOJ,UAAU,CAACK,GAAX,CAAeP,IAAI,CAACQ,UAAL,oBAA0BJ,KAA1B,uBAA4CC,QAA5C,CAAf,EACNI,IADM,CACD,UAACC,QAAD,EAAY;AACd,UAAG,IAAIA,QAAQ,CAACC,IAAT,CAAcC,MAArB,EAA4B;AACxBN,QAAAA,QAAQ,CAACP,OAAO,CAACc,WAAR,CAAoBH,QAAQ,CAACC,IAAT,CAAc,CAAd,CAApB,EAAsC,IAAtC,CAAD,CAAR;AACH;;AACD,aAAOD,QAAQ,CAACC,IAAhB;AACH,KANM,EAONG,KAPM,CAOA,UAACC,KAAD,EAAS;AACZC,MAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AACH,KATM,CAAP;AAUH,GAXiB;AAAA,CAAlB;;AAaA,IAAME,UAAU,GAAG,SAAbA,UAAa;AAAA,SAAM,UAACX,QAAD,EAAa;AAClCA,IAAAA,QAAQ,CAACP,OAAO,CAACc,WAAR,CAAoB,EAApB,EAAwB,KAAxB,CAAD,CAAR;AACAZ,IAAAA,SAAS;AACZ,GAHkB;AAAA,CAAnB;;AAKA,SACIE,SADJ,EAEIc,UAFJ","sourcesContent":["import * as Actions from \"./actions\";\r\nimport * as Path from './apiRoutes';\r\nimport clearAuth from \"../../../../utils/clearAuth\";\r\nimport ApiService from \"../../../../utils/apiService\";\r\n\r\nconst loginUser = (email, password) => (dispatch) =>{\r\n    return ApiService.get(Path.LOGIN_USER+`?email=${email}&password=${password}`)\r\n    .then((response)=>{\r\n        if(0 < response.data.length){\r\n            dispatch(Actions.setUserAuth(response.data[0], true));\r\n        }\r\n        return response.data;\r\n    })\r\n    .catch((error)=>{\r\n        console.error(error);\r\n    })\r\n};\r\n\r\nconst logoutUser = () => (dispatch) =>{\r\n    dispatch(Actions.setUserAuth([], false));\r\n    clearAuth();\r\n};\r\n\r\nexport{\r\n    loginUser, \r\n    logoutUser\r\n};\r\n"]},"metadata":{},"sourceType":"module"}